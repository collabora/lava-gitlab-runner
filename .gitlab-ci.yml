default:
  tags:
    - lightweight

stages:
  - build
  - docker
  - deploy
  - cleanup

release build:
  stage: build
  image: rust:slim-bullseye
  before_script:
    - apt update
    - apt install -y libssl-dev pkg-config
  variables:
    DEBIAN_FRONTEND: noninteractive
  tags:
    - heavyweight
  script:
    - cargo build --release
    - mv target/release/lava-gitlab-runner  .
  artifacts:
    paths:
      - lava-gitlab-runner

docker image:
  stage: docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - |
      cat << EOF  > /kaniko/.docker/config.json
      {
        "auths":{
          "$CI_REGISTRY": {
            "username":"$CI_REGISTRY_USER",
            "password":"$CI_REGISTRY_PASSWORD"
          }
        }
      }
      EOF
    - >
      /kaniko/executor
      --context $CI_PROJECT_DIR/
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --destination $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_PIPELINE_IID-$CI_COMMIT_SHA
      --destination $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:latest
      --build-arg REGISTRY=$CI_REGISTRY_IMAGE
      --single-snapshot
    - echo Pushed


.deploy:
  stage: deploy
  image: alpine/k8s:1.19.8
  script:
    - >
      kubectl create secret -n "$KUBE_NAMESPACE"
      docker-registry "gitlab-registry-${CI_PROJECT_PATH_SLUG}"
      --docker-server="$CI_REGISTRY"
      --docker-username="${CI_DEPLOY_USER:-$CI_REGISTRY_USER}"
      --docker-password="${CI_DEPLOY_PASSWORD:-$CI_REGISTRY_PASSWORD}"
      --docker-email="$GITLAB_USER_EMAIL"
      -o yaml --dry-run | kubectl replace -n "$KUBE_NAMESPACE" --force -f -
    - >
      helm upgrade --install
      --wait
      --set gitlab.app="$CI_PROJECT_PATH_SLUG"
      --set gitlab.env="$CI_ENVIRONMENT_SLUG"
      --set image.repository="$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
      --set-string image.tag="$CI_PIPELINE_IID-$CI_COMMIT_SHA"
      --set-string gitlab.url="$GITLAB_URL"
      --set-string gitlab.token="$GITLAB_TOKEN"
      --namespace="$KUBE_NAMESPACE"
      "$CI_ENVIRONMENT_SLUG"
      chart/

.stop:
  image: alpine/k8s:1.19.8
  stage: cleanup
  variables:
    GIT_STRATEGY: none
  script:
    - helm delete "$CI_ENVIRONMENT_SLUG" --namespace "$KUBE_NAMESPACE"
  environment:
    action: stop


deploy runner:
  extends: .deploy
  environment:
    name: $CI_COMMIT_REF_NAME
  rules:
    - if: '$GITLAB_URL'

stop deployment:
  extends: .stop
  environment:
    name: $CI_COMMIT_REF_NAME
  rules:
    - if: '$GITLAB_URL'
      when: manual
